###################################################################################
##	
##						Copyright 2009-2013 xxxxxxx, xxxxxxx
##	File:	Makefile
##	Author:	Bala B. (bhat.balasubramanya@gmail.com)
##	Description: GDB Helper Macros
##
###################################################################################


define showsolicitedstack

end

define showallstacks
  
  set $id = 0
  set $max_tasks = 8 * sizeof(g_task_usage_mask)
  while($id < $max_tasks)
    if((g_task_usage_mask[$id >> 5] >> ($id & 0x1f)) & 1)
	  printf "\nTask %3d: %8s", $id, g_task_pool[$id].name
      if(g_current_task != &g_task_pool[$id])
        
        ## SOLS stack
        if(g_task_pool[$id].top_of_stack[0] == 1)
          printf "\n0x%08x\tSOLS Stack frame\n", g_task_pool[$id].top_of_stack
          printf "0x%08x\t", g_task_pool[$id].top_of_stack[12]
          output /a (g_task_pool[$id].top_of_stack[12] - 4)
          printf "\n"
          showfunctioncallstack g_task_pool[$id].top_of_stack[9]
        else
        
        ## INT Stack
        if(g_task_pool[$id].top_of_stack[0] == 2)
          printf "\n0x%08x\tINTR Stack frame\n", g_task_pool[$id].top_of_stack
          printf "0x%08x\t", g_task_pool[$id].top_of_stack[16]
          output /a (g_task_pool[$id].top_of_stack[16] - 4)
          printf "\n"
          showfunctioncallstack g_task_pool[$id].top_of_stack[13]
        else
        
        ## NEW Stack
        if(g_task_pool[$id].top_of_stack[0] == 3)
          printf "\t NEW Stack\n"
          x/i g_task_pool[$id].top_of_stack[6]
          showfunctioncallstack g_task_pool[$id].top_of_stack[5]
        else
          printf "\tINVALID Stack"
        end      
        end
        end    
      else
       
        ## Current stack
        printf "\t[Current]\n"
        printf "0x%08x\t", $fp
        output /a ($lr - 4)
        printf "\n"
        showfunctioncallstack $fp
      end      
    end    
    set $id ++
  end
  
  printf "\n"
end

document showallstacks
  Prints backtrace of all tasks in the system
end

define showfunctioncallstack 
  set $prev_frame = 0
  set $next_frame = *(unsigned long *)$arg0
  while ($next_frame && ($next_frame != $prev_frame))
    printf "0x%08x\t", $next_frame
    output /a *(unsigned long *)($next_frame)
    printf "\n"
    set $next_frame = *(unsigned long *)($next_frame - 4)
  end
end
